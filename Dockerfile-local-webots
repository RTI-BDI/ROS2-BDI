FROM ros:humble

SHELL ["/bin/bash", "-c"]

WORKDIR /root

# Update to latest version
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ="Europe/London"
RUN apt-get update

RUN apt-get install -y vim gdb terminator screen

# install ros package
RUN apt-get update && apt-get install -y \
      ros-${ROS_DISTRO}-desktop \
      ros-${ROS_DISTRO}-demo-nodes-cpp \
      ros-${ROS_DISTRO}-demo-nodes-py

# install plansys2
RUN mkdir -p ~/plansys2_ws/src && \
    cd ~/plansys2_ws/src && \
    git clone https://github.com/IntelligentRoboticsLabs/ros2_planning_system.git && \
    git clone https://github.com/IntelligentRoboticsLabs/ros2_planning_system_examples.git && \
    cd ~/plansys2_ws && \
    rosdep install -y -r -q --from-paths src --ignore-src --rosdistro ${ROS_DISTRO}

RUN cd ~/plansys2_ws && \
    source /opt/ros/${ROS_DISTRO}/setup.bash && \
    colcon build --symlink-install

# source entrypoint setup
RUN sed --in-place --expression \
      '$isource "/root/plansys2_ws/install/setup.bash"' \
      /ros_entrypoint.sh





# webots_ros2_driver
# https://docs.ros.org/en/iron/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.html
ENV WEBOTS_SHARED_FOLDER /Users/marcorobol/shared:/root/shared
RUN apt-get update && \
    apt install -y ros-humble-webots-ros2 iproute2





# install libboost-dev
RUN apt-get update && apt-get install -y libboost-dev

# install libyaml (0.6 and not apt-get install libyaml-cpp0.7)
RUN git clone --depth 1 --branch yaml-cpp-0.6.0 https://github.com/jbeder/yaml-cpp.git && \
    cd yaml-cpp && \
    mkdir build && \
    cd build && \
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DYAML_BUILD_SHARED_LIBS=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. && \
    make && \
    make install
# RUN ls /usr/lib/cmake/yaml-cpp
ENV LD_LIBRARY_PATH /usr/local/lib:/usr/lib:$LD_LIBRARY_PATH
ENV CMAKE_PREFIX_PATH /usr/lib/cmake:$CMAKE_PREFIX_PATH





# install ros2bdi 
# VOLUME ros2bdi_ws/src/ROS2-BDI
COPY . ros2bdi_ws/src/ROS2-BDI

RUN source /root/plansys2_ws/install/setup.bash && \
    cd ~/ros2bdi_ws && \
    colcon build --packages-select ros2_bdi_interfaces

RUN rm -rf /root/ros2bdi_ws/build/ros2_bdi_interfaces

RUN NUM_CORES=$(nproc) && \
    export MAKEFLAGS="-j$NUM_CORES" && \
    export AMENT_BUILD_GRADLE_ARGS="-j$NUM_CORES" && \
    export AMENT_BUILD_MAKE_ARGS="-j$NUM_CORES" && \
    source /root/plansys2_ws/install/setup.bash && \
    cd ~/ros2bdi_ws && \
    colcon build --packages-select ros2_bdi_utils ros2_bdi_skills ros2_bdi_bringup ros2_bdi_core --packages-skip ros2_bdi_interfaces

RUN NUM_CORES=$(nproc) && \
    export MAKEFLAGS="-j$NUM_CORES" && \
    export AMENT_BUILD_GRADLE_ARGS="-j$NUM_CORES" && \
    export AMENT_BUILD_MAKE_ARGS="-j$NUM_CORES" && \
    source /root/plansys2_ws/install/setup.bash && \
    cd ~/ros2bdi_ws && \
    colcon build --symlink-install --packages-ignore ros2_bdi_tests && \
    source /root/ros2bdi_ws/install/setup.bash && \
    colcon build --packages-select ros2_bdi_tests

RUN NUM_CORES=$(nproc) && \
    export MAKEFLAGS="-j$NUM_CORES" && \
    export AMENT_BUILD_GRADLE_ARGS="-j$NUM_CORES" && \
    export AMENT_BUILD_MAKE_ARGS="-j$NUM_CORES" && \
    source /root/plansys2_ws/install/setup.bash && \
    cd ~/ros2bdi_ws && \
    colcon build --symlink-install --packages-select webots_ros2_simulations_interfaces webots_ros2_simulations ros2_bdi_on_webots




# source entrypoint setup
RUN sed --in-place --expression \
      '$isource "/root/ros2bdi_ws/install/setup.bash"' \
      /ros_entrypoint.sh

CMD ["/bin/bash", "-c", "source /root/ros2bdi_ws/install/setup.bash && source /opt/ros/humble/setup.bash && source /root/plansys2_ws/install/setup.bash"]


# to build
# sudo docker build --platform=linux/amd64 --rm  --tag ros2bdi-local-webots --file Dockerfile-local-webots .

# to run
# sudo docker run --platform=linux/amd64 -v .:/root/ros2bdi_ws/src/ROS2-BDI -v /Users/marcorobol/shared:/root/shared/ -e "WEBOTS_SHARED_FOLDER=/Users/marcorobol/shared:/root/shared" --rm -it ros2bdi-local-webots ros2 launch webots_ros2_simulations blocks_world.launch.py

